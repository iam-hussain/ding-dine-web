/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplitImport } from './routes/_split'
import { Route as AuthenticatedImport } from './routes/_authenticated'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const SplitIndexLazyImport = createFileRoute('/_split/')()
const SplitStoresLazyImport = createFileRoute('/_split/stores')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const SplitRoute = SplitImport.update({
  id: '/_split',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const SplitIndexLazyRoute = SplitIndexLazyImport.update({
  path: '/',
  getParentRoute: () => SplitRoute,
} as any).lazy(() => import('./routes/_split/index.lazy').then((d) => d.Route))

const SplitStoresLazyRoute = SplitStoresLazyImport.update({
  path: '/stores',
  getParentRoute: () => SplitRoute,
} as any).lazy(() => import('./routes/_split/stores.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_split': {
      id: '/_split'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SplitImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_split/stores': {
      id: '/_split/stores'
      path: '/stores'
      fullPath: '/stores'
      preLoaderRoute: typeof SplitStoresLazyImport
      parentRoute: typeof SplitImport
    }
    '/_split/': {
      id: '/_split/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof SplitIndexLazyImport
      parentRoute: typeof SplitImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  SplitRoute: SplitRoute.addChildren({
    SplitStoresLazyRoute,
    SplitIndexLazyRoute,
  }),
  AboutLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_split",
        "/about"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx"
    },
    "/_split": {
      "filePath": "_split.tsx",
      "children": [
        "/_split/stores",
        "/_split/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_split/stores": {
      "filePath": "_split/stores.lazy.tsx",
      "parent": "/_split"
    },
    "/_split/": {
      "filePath": "_split/index.lazy.tsx",
      "parent": "/_split"
    }
  }
}
ROUTE_MANIFEST_END */
